{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","services/firebase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/img01.jpeg","assets/img02.jpeg","assets/img03.jpeg","views/base/carousels/Carousels.js","views/base/breadcrumbs/Breadcrumbs.js"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","_toConsumableArray","arrayLikeToArray","iter","Carousels","xs","style","backgroundColor","textAlign","fontSize","animate","autoSlide","width","height","src","foto01","alt","foto02","foto03","direction","validate","values","errors","nome","color","email","rg","cpf","data","naturalidade","endere√ßo","bairro","municipio","cep","tel","cel","pai","mae","grad","orgao","situacao","matricula","inclusao","atuacao","sede","Breadcrumbs","useState","show","setShow","fileRGUrl","setFileRGUrl","fileCCUrl","setFileCCUrl","namedep","setNameDep","cpfDep","setCpfDep","dependentList","setDependentList","setInfo","e","a","file","target","files","storageRef","storage","ref","fileRef","child","put","getDownloadURL","removeCustom","ts","setTimeout","formik","useFormik","initialValues","status","onSubmit","firestore","collection","add","dependente","contracheque","rgMilitar","toast","success","resetForm","xl","id","handleSubmit","className","sm","htmlFor","type","placeholder","onChange","handleChange","row","autoComplete","inputMode","md","custom","marginTop","marginLeft","onClick","map","item","col","window","open"],"mappings":"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","file":"static/js/7.0f44c1e1.chunk.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import firebase from \"firebase\";\nimport \"firebase/storage\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA2izCgMGp6HPJBBQOExAwS8tqOqoROodM\",\n  authDomain: \"acspmbm-2a56d.firebaseapp.com\",\n  projectId: \"acspmbm-2a56d\",\n  storageBucket: \"acspmbm-2a56d.appspot.com\",\n  messagingSenderId: \"239970468989\",\n  appId: \"1:239970468989:web:ae6452602cb799014f9d14\",\n};\n// Initialize Firebase\nexport default firebase.initializeApp(firebaseConfig);\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/img01.e0f8c456.jpeg\";","export default __webpack_public_path__ + \"static/media/img02.ef05119c.jpeg\";","export default __webpack_public_path__ + \"static/media/img03.5fc33ace.jpeg\";","import React from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCarousel,\n  CCarouselCaption,\n  CCarouselControl,\n  CCarouselIndicators,\n  CCarouselInner,\n  CCarouselItem,\n  CCol\n} from '@coreui/react'\nimport foto01 from '../../../assets/img01.jpeg'\nimport foto02 from '../../../assets/img02.jpeg'\nimport foto03 from '../../../assets/img03.jpeg'\n\n\nconst Carousels = () => {\n  \n  return (\n      <CCol xs=\"12\">\n        <CCard style={{backgroundColor: '#7159c1'}}>\n          <CCardHeader style={{textAlign: 'center', fontSize: 20}}>\n            Trabalhando para oferecer o melhor para voc√™!\n          </CCardHeader>\n          <CCardBody>\n            <CCarousel animate autoSlide={3000}>\n              <CCarouselIndicators/>\n              <CCarouselInner>\n                <CCarouselItem>\n                  <img  style={{width: '100%', height: '500px'}} src={foto01} alt=\"slide 1\"/>\n                  <CCarouselCaption><h3>TEXTO</h3><p>Texto 01</p></CCarouselCaption>\n                </CCarouselItem>\n                <CCarouselItem>\n                  <img style={{width: '100%', height: '500px'}} src={foto02} alt=\"slide 2\"/>\n                  <CCarouselCaption><h3>TEXTO</h3><p>Texto 02</p></CCarouselCaption>\n                </CCarouselItem>\n                <CCarouselItem>\n                  <img style={{width: '100%', height: '500px'}} src={foto03} alt=\"slide 3\"/>\n                  <CCarouselCaption><h3>TEXTO</h3><p>Texto 03</p></CCarouselCaption>\n                </CCarouselItem>\n              </CCarouselInner>\n              <CCarouselControl direction=\"prev\"/>\n              <CCarouselControl direction=\"next\"/>\n            </CCarousel>\n          </CCardBody>\n        </CCard>\n      </CCol>\n  )\n}\n\nexport default Carousels\n","import {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CInput,\n  CInputFile,\n  CLabel,\n  CRow,\n  CSelect,\n} from \"@coreui/react\";\nimport { useFormik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport firebase from \"../../../services/firebase\";\nimport Carousels from \"../carousels/Carousels\";\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.nome) {\n    errors.nome = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n\n  if (!values.email) {\n    errors.email = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Insira um Email V√°lido\";\n  }\n  if (!values.rg) {\n    errors.rg = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  } else if (values.rg.length > 20) {\n    errors.rg = \"Must be 20 characters or less\";\n  }\n  if (!values.cpf) {\n    errors.cpf = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  } else if (values.cpf.length > 20) {\n    errors.cpf = \"Must be 20 characters or less\";\n  }\n  if (!values.data) {\n    errors.data = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.naturalidade) {\n    errors.naturalidade = (\n      <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>\n    );\n  }\n  if (!values.endere√ßo) {\n    errors.endere√ßo = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.bairro) {\n    errors.bairro = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.municipio) {\n    errors.municipio = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.cep) {\n    errors.cep = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.tel) {\n    errors.tel = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.cel) {\n    errors.cel = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.pai) {\n    errors.pai = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.mae) {\n    errors.mae = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.grad) {\n    errors.grad = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.orgao) {\n    errors.orgao = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.situacao) {\n    errors.situacao = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.matricula) {\n    errors.matricula = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.inclusao) {\n    errors.inclusao = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.atuacao) {\n    errors.atuacao = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.sede) {\n    errors.sede = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n\n  return errors;\n};\n\nexport default function Breadcrumbs() {\n  // const [nome, setNome] = useState(\"\");\n  // const [email, setEmail] = useState('');\n  // const [rg, setRg] = useState('');\n  // const [cpf, setCpf] = useState('');\n  // const [nasc, setNasc] = useState('');\n  // const [natur, setNatur] = useState('');\n  // const [end, setEnd] = useState('');\n  // const [bairro, setBairro] = useState('');\n  // const [munic, setMunic] = useState('');\n  // const [cep, setCep] = useState('');\n  // const [tel, setTel] = useState('');\n  // const [cel, setCel] = useState('');\n  // const [pai, setPai] = useState('');\n  // const [mae, setMae] = useState('');\n  // const [posto, setPosto] = useState('');\n  // const [orgao, setOrgao] = useState('');\n  // const [funcional, setFuncional] = useState('');\n  // const [matricula, setMatricula] = useState('');\n  // const [inclusao, setInclusao] = useState('');\n  // const [cheque, setCheque] = useState('');\n  // const [crg, setCrg] = useState('');\n  // const [status, setStatus] = useState('');\n  const [show, setShow] = useState(false);\n  // const [dataList, setDataList] = useState({});\n  const [fileRGUrl, setFileRGUrl] = useState(null);\n  const [fileCCUrl, setFileCCUrl] = useState(null);\n  const [namedep, setNameDep] = useState(null);\n  const [cpfDep, setCpfDep] = useState(null);\n  const [dependentList, setDependentList] = useState([]);\n  const [info, setInfo] = useState(\"\");\n\n  async function onFileChange(e) {\n    const file = e.target.files[0];\n    const storageRef = firebase.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    await fileRef.put(file);\n    setFileRGUrl(await fileRef.getDownloadURL());\n  }\n  async function onFileChange1(e) {\n    const file = e.target.files[0];\n    const storageRef = firebase.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    await fileRef.put(file);\n    setFileCCUrl(await fileRef.getDownloadURL());\n  }\n\n  function removeCustom() {\n    let ts = dependentList;\n    // let ta = ts.splice(ts.indexOf(info.nome), 1);\n    if (info !== \"\") {\n      setDependentList(ts);\n    } else {\n      setTimeout(() => {\n        setDependentList(ts);\n      }, 1000);\n    }\n  }\n  // useEffect(() => {\n\n  // }, [info]);\n  const formik = useFormik({\n    initialValues: {\n      nome: \"\",\n      email: \"\",\n      rg: \"\",\n      cpf: \"\",\n      data: \"\",\n      naturalidade: \"\",\n      endere√ßo: \"\",\n      bairro: \"\",\n      municipio: \"\",\n      cep: \"\",\n      tel: \"\",\n      cel: \"\",\n      pai: \"\",\n      mae: \"\",\n      grad: \"\",\n      orgao: \"\",\n      situacao: \"\",\n      matricula: \"\",\n      inclusao: \"\",\n      atuacao: \"\",\n      sede: \"\",\n      status: \"ATIVO\",\n    },\n    validate,\n    onSubmit: (values) => {\n      if (fileRGUrl !== null && fileCCUrl !== null) {\n        const data = firebase.firestore().collection(\"users\");\n        data.add({\n          nome: values.nome,\n          email: values.email,\n          rg: values.rg,\n          cpf: values.cpf,\n          data: values.data,\n          naturalidade: values.naturalidade,\n          endere√ßo: values.endere√ßo,\n          bairro: values.bairro,\n          municipio: values.municipio,\n          cep: values.cep,\n          tel: values.tel,\n          cel: values.cel,\n          pai: values.pai,\n          mae: values.mae,\n          grad: values.grad,\n          orgao: values.orgao,\n          situacao: values.situacao,\n          matricula: values.matricula,\n          inclusao: values.inclusao,\n          atuacao: values.atuacao,\n          sede: values.sede,\n          dependente: dependentList,\n          contracheque: fileCCUrl,\n          rgMilitar: fileRGUrl,\n          status: \"ATIVO\",\n        });\n\n        toast.success(\"Militar foi Inserido com sucesso\");\n        formik.resetForm();\n        setShow(true);\n      } else {\n        toast.error(\"Insira a c√≥pia do ContraCheque ou RG Militar \");\n      }\n      // setShow(true);\n    },\n  });\n  return (\n    <div>\n      {show === false ? (\n        <CRow>\n          <CCol xl=\"12\">\n            <CCard>\n              <CCardHeader style={{ fontSize: 20, textAlign: \"center\" }}>\n                Formul√°rio de Inclus√£o\n              </CCardHeader>\n              <CCardBody>\n                <div id=\"accordion\">\n                  <form onSubmit={formik.handleSubmit}>\n                    <CCard className=\"mb-0\">\n                      <CCardBody>\n                        <CCol xs=\"12\" sm=\"12\">\n                          <CCard>\n                            <CCardBody>\n                              <CFormGroup>\n                                <CLabel htmlFor=\"name\">NOME</CLabel>\n                                <CInput\n                                  id=\"nome\"\n                                  name=\"nome\"\n                                  type=\"text\"\n                                  placeholder=\"Digite o nome completo\"\n                                  onChange={formik.handleChange}\n                                  value={formik.values.nome}\n                                />\n                                {formik.errors.nome ? (\n                                  <div>{formik.errors.nome}</div>\n                                ) : null}\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"8\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"vat\">EMAIL</CLabel>\n                                    <CInput\n                                      type=\"email\"\n                                      id=\"email\"\n                                      name=\"email\"\n                                      placeholder=\"Digite o Email\"\n                                      autoComplete=\"email\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.email}\n                                    />\n                                    {formik.errors.email ? (\n                                      <div>{formik.errors.email}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"vat\">RG</CLabel>\n                                    <CInput\n                                      type=\"number\"\n                                      id=\"rg\"\n                                      name=\"rg\"\n                                      placeholder=\"Digite o RG\"\n                                      inputMode=\"number\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.rg}\n                                    />\n                                    {formik.errors.rg ? (\n                                      <div>{formik.errors.rg}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"cpf\">CPF</CLabel>\n                                    <CInput\n                                      type=\"number\"\n                                      id=\"cpf\"\n                                      name=\"cpf\"\n                                      placeholder=\"Digite o cpf\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.cpf}\n                                    />\n                                    {formik.errors.cpf ? (\n                                      <div>{formik.errors.cpf}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"vat\">\n                                      DATA DE NASCIMENTO\n                                    </CLabel>\n                                    <CInput\n                                      type=\"date\"\n                                      id=\"data\"\n                                      name=\"data\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.data}\n                                      placeholder=\"Digite a data de nascimento\"\n                                    />\n                                    {formik.errors.data ? (\n                                      <div>{formik.errors.data}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"vat\">NATURALIDADE</CLabel>\n                                    <CInput\n                                      type=\"text\"\n                                      name=\"naturalidade\"\n                                      id=\"naturalidade\"\n                                      placeholder=\"Digite a naturalidade\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.naturalidade}\n                                    />\n                                    {formik.errors.naturalidade ? (\n                                      <div>{formik.errors.naturalidade}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"6\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"street\">ENDERE√áO</CLabel>\n                                    <CInput\n                                      id=\"endere√ßo\"\n                                      type=\"text\"\n                                      name=\"endere√ßo\"\n                                      placeholder=\"Digite o endere√ßo\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.endere√ßo}\n                                    />\n                                    {formik.errors.endere√ßo ? (\n                                      <div>{formik.errors.endere√ßo}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"6\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"street\">BAIRRO</CLabel>\n                                    <CInput\n                                      id=\"bairro\"\n                                      type=\"text\"\n                                      name=\"bairro\"\n                                      placeholder=\"Digite o bairro\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.bairro}\n                                    />\n                                    {formik.errors.bairro ? (\n                                      <div>{formik.errors.bairro}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"city\">MUNIC√çPIO</CLabel>\n                                    <CInput\n                                      id=\"municipio\"\n                                      type=\"text\"\n                                      name=\"municipio\"\n                                      placeholder=\"Digite o munic√≠pio\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.municipio}\n                                    />\n                                    {formik.errors.municipio ? (\n                                      <div>{formik.errors.municipio}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"postal-code\">CEP</CLabel>\n                                    <CInput\n                                      id=\"cep\"\n                                      type=\"number\"\n                                      name=\"cep\"\n                                      placeholder=\"Digite o cep\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.cep}\n                                    />\n                                    {formik.errors.cep ? (\n                                      <div>{formik.errors.cep}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"postal-code\">\n                                      TELEFONE FIXO\n                                    </CLabel>\n                                    <CInput\n                                      id=\"tel\"\n                                      type=\"number\"\n                                      name=\"tel\"\n                                      placeholder=\"Digite o telefone fixo\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.tel}\n                                    />\n                                    {formik.errors.tel ? (\n                                      <div>{formik.errors.tel}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"postal-code\">\n                                      TELEFONE CELULAR (ZAP)\n                                    </CLabel>\n                                    <CInput\n                                      id=\"cel\"\n                                      type=\"number\"\n                                      name=\"cel\"\n                                      placeholder=\"Digite o celular\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.cel}\n                                    />\n                                    {formik.errors.cel ? (\n                                      <div>{formik.errors.cel}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"6\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">NOME DO PAI</CLabel>\n                                    <CInput\n                                      id=\"pai\"\n                                      type=\"text\"\n                                      name=\"pai\"\n                                      placeholder=\"Digite o nome do pai\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.pai}\n                                    />\n                                    {formik.errors.pai ? (\n                                      <div>{formik.errors.pai}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"6\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">NOME DO M√ÉE</CLabel>\n                                    <CInput\n                                      id=\"mae\"\n                                      type=\"text\"\n                                      name=\"mae\"\n                                      placeholder=\"Digite o nome da m√£e\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.mae}\n                                    />{\" \"}\n                                    {formik.errors.mae ? (\n                                      <div>{formik.errors.mae}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"3\" md=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">POST/GRAD</CLabel>\n                                    <CSelect\n                                      custom\n                                      name=\"grad\"\n                                      id=\"grad\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.grad}\n                                    >\n                                      <option value=\"0\">Selecionar</option>\n                                      <option value=\"CORONEL\">CORONEL</option>\n                                      <option value=\"TENENTE COTONEL\">\n                                        TENENTE COTONEL\n                                      </option>\n                                      <option value=\"MAJOR\">MAJOR</option>\n                                      <option value=\"CAPIT√ÉO\">CAPIT√ÉO</option>\n                                      <option value=\"1¬∫ TENENTE\">\n                                        1¬∫ TENENTE\n                                      </option>\n                                      <option value=\"2¬∫ TENENTE\">\n                                        2¬∫ TENENTE\n                                      </option>\n                                      <option value=\"ASPIRANTE A OFICIAL\">\n                                        ASPIRANTE A OFICIAL\n                                      </option>\n                                      <option value=\"ALUNO OFICIAL\">\n                                        ALUNO OFICIAL\n                                      </option>\n                                      <option value=\"SUB TENENTE\">\n                                        SUB TENENTE\n                                      </option>\n                                      <option value=\"1¬∫ SARGENTO\">\n                                        1¬∫ SARGENTO\n                                      </option>\n                                      <option value=\"2¬∫ SARGENTO\">\n                                        2¬∫ SARGENTO\n                                      </option>\n                                      <option value=\"3¬∫ SARGENTO\">\n                                        3¬∫ SARGENTO\n                                      </option>\n                                      <option value=\"CABO\">CABO</option>\n                                      <option value=\"SOLDADO\">SOLDADO</option>\n                                      <option value=\"ALUNO SOLDADO\">\n                                        ALUNO SOLDADO\n                                      </option>\n                                    </CSelect>\n                                    {formik.errors.grad ? (\n                                      <div>{formik.errors.grad}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\" md=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">ORG√ÉO</CLabel>\n                                    <CSelect\n                                      custom\n                                      name=\"orgao\"\n                                      id=\"orgao\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.orgao}\n                                    >\n                                      <option value=\"0\">Selecionar</option>\n                                      <option value=\"POL√çCIA MILITAR\">\n                                        POL√çCIA MILITAR\n                                      </option>\n                                      <option value=\"CORPO DE BOMBEIROS\">\n                                        CORPO DE BOMBEIROS\n                                      </option>\n                                    </CSelect>\n                                    {formik.errors.orgao ? (\n                                      <div>{formik.errors.orgao}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\" md=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">\n                                      SITUA√á√ÉO FUNCIONAL\n                                    </CLabel>\n                                    <CSelect\n                                      custom\n                                      name=\"situacao\"\n                                      id=\"situacao\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.situacao}\n                                    >\n                                      <option value=\"0\">Selecionar</option>\n                                      <option value=\"ATIVA\">ATIVA</option>\n                                      <option value=\"RESERVA REMUNERADA\">\n                                        RESERVA REMUNERADA\n                                      </option>\n                                    </CSelect>\n                                    {formik.errors.situacao ? (\n                                      <div>{formik.errors.situacao}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"text\">\n                                      MATRICULA FUNCIONAL\n                                    </CLabel>\n                                    <CInput\n                                      name=\"matricula\"\n                                      id=\"matricula\"\n                                      type=\"number\"\n                                      inputMode=\"number\"\n                                      placeholder=\"Digite a matricula\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.matricula}\n                                    />\n                                    {formik.errors.matricula ? (\n                                      <div>{formik.errors.matricula}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"date\">\n                                      DATA DA INCLUS√ÉO\n                                    </CLabel>\n                                    <CInput\n                                      id=\"inclusao\"\n                                      name=\"inclusao\"\n                                      type=\"date\"\n                                      placeholder=\"digite a data\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.inclusao}\n                                    />\n                                    {formik.errors.inclusao ? (\n                                      <div>{formik.errors.inclusao}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"date\">\n                                      LOCAL ATUAL DE ATUA√á√ÉO\n                                    </CLabel>\n                                    <CInput\n                                      id=\"atuacao\"\n                                      name=\"atuacao\"\n                                      type=\"text\"\n                                      placeholder=\"digite o local\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.atuacao}\n                                    />{\" \"}\n                                    {formik.errors.atuacao ? (\n                                      <div>{formik.errors.atuacao}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">GR√äMIO</CLabel>\n                                    <CSelect\n                                      custom\n                                      name=\"sede\"\n                                      id=\"sede\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.sede}\n                                    >\n                                      <option value=\"0\">Selecionar</option>\n                                      <option value=\"BEL√âM\">BEL√âM</option>\n                                      <option value=\"CASTANHAL\">CASTANHAL</option>\n                                      <option value=\"CAPANEMA\">CAPANEMA</option>\n                                      <option value=\"PARAGOMINAS\">PARAGOMINAS</option>\n                                      <option value=\"MARAB√Å\">MARAB√Å</option>\n                                      <option value=\"PARAUAPEBAS\">PARAUAPEBAS</option>\n                                      <option value=\"CONCEI√á√ÉO DO ARAGUAIA\">CONCEI√á√ÉO DO ARAGUAIA</option>\n                                      <option value=\"XINGUARA\">XINGUARA</option>\n                                      <option value=\"REDEN√á√ÉO\">REDEN√á√ÉO</option>\n                                      <option value=\"SOURE\">SOURE</option>\n                                      <option value=\"TUCURU√ç\">TUCURU√ç</option>\n                                      <option value=\"SANTAR√âM\">SANTAR√âM</option>\n                                      <option value=\"MONTE ALEGRE\">MONTE ALEGRE</option>\n                                      <option value=\"ORIXIMIN√Å\">ORIXIMIN√Å</option>\n                                      <option value=\"ALTAMIRA\">ALTAMIRA</option>\n                                      <option value=\"ITAITUBA\">ITAITUBA</option>\n                                    </CSelect>\n                                    {formik.errors.sede ? (\n                                      <div>{formik.errors.sede}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"date\">\n                                      {\" \"}\n                                      NOME DO DEPENDENTE\n                                    </CLabel>\n                                    <CInput\n                                      id=\"nomedep\"\n                                      name=\"nomedep\"\n                                      type=\"text\"\n                                      placeholder=\"digite o nome do dependente\"\n                                      onChange={(e) =>\n                                        setNameDep(e.target.value)\n                                      }\n                                      value={namedep}\n                                    />{\" \"}\n                                  </CFormGroup>\n                                </CCol>{\" \"}\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"date\">\n                                      {\" \"}\n                                      CPF DO DEPENDENTE\n                                    </CLabel>\n                                    <CInput\n                                      id=\"nomedep\"\n                                      name=\"nomedep\"\n                                      type=\"number\"\n                                      inputMode=\"numeric\"\n                                      placeholder=\"digite o CPF do dependente\"\n                                      onChange={(e) =>\n                                        setCpfDep(e.target.value)\n                                      }\n                                      value={cpfDep}\n                                    />{\" \"}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CButton\n                                    color=\"success\"\n                                    style={{\n                                      width: 100,\n                                      marginTop: 10,\n                                      marginLeft: 10,\n                                    }}\n                                    onClick={() => {\n                                      setDependentList([\n                                        ...dependentList,\n                                        {\n                                          nome: namedep,\n                                          cpf: cpfDep,\n                                        },\n                                      ]);\n                                    }}\n                                  >\n                                    {\" \"}\n                                    Adicionar\n                                  </CButton>{\" \"}\n                                </CCol>\n                                {dependentList.length !== 0 ? (\n                                  <CCol>\n                                    <CLabel htmlFor=\"date\"> DEPENDENTES</CLabel>\n                                    {dependentList.map((item) => {\n                                      const info = item;\n                                      return (\n                                        <>\n                                          <CFormGroup>\n                                            <p>\n                                              NOME: {item.nome} CPF: {item.cpf}{\" \"}\n                                            </p>\n                                          </CFormGroup>\n                                          <CFormGroup>\n                                            <CButton\n                                              color=\"danger\"\n                                              style={{ width: 100 }}\n                                              onClick={() => {\n                                                setInfo(info);\n                                                removeCustom();\n                                              }}\n                                            >\n                                              {\" \"}\n                                              Remover\n                                            </CButton>\n                                          </CFormGroup>\n                                        </>\n                                      );\n                                    })}\n                                  </CCol>\n                                ) : (\n                                  <CCol xs=\"4\"></CCol>\n                                )}\n                                <CCol xs=\"4\"></CCol> <CCol xs=\"4\"></CCol>\n                                {/* <CFormGroup> */}\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel col htmlFor=\"file-input\">\n                                      CONTRACHEQUE\n                                    </CLabel>\n                                    <CInputFile\n                                      id=\"contracheque\"\n                                      name=\"contracheque\"\n                                      type=\"file\"\n                                      onChange={onFileChange1}\n                                    />\n                                    {fileCCUrl === null ? (\n                                      <div>\n                                        {\" \"}\n                                        <p style={{ color: \"red\" }}>\n                                          Preencha esse campo\n                                        </p>\n                                      </div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                {fileCCUrl !== null ? (\n                                  <CCol xs=\"4\">\n                                    <CFormGroup>\n                                      {/* <CLabel htmlFor=\"file-input\">\n                                      Visualizar Contracheque\n                                    </CLabel> */}\n                                      <CButton\n                                        color=\"success\"\n                                        style={{ width: 200, marginTop: 10 }}\n                                        onClick={() => {\n                                          window.open(fileCCUrl, \"_blank\");\n                                        }}\n                                      >\n                                        {\" \"}\n                                        Visualizar Contracheque\n                                      </CButton>\n                                    </CFormGroup>\n                                  </CCol>\n                                ) : (\n                                  <CCol xs=\"4\"></CCol>\n                                )}\n                                {/* </CFormGroup> */}\n                                <CCol xs=\"4\"></CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel col md=\"6\" htmlFor=\"file-input\">\n                                      RG MILITAR\n                                    </CLabel>\n                                    <CInputFile\n                                      id=\"rgMilitar\"\n                                      name=\"rgMilitar\"\n                                      type=\"file\"\n                                      onChange={onFileChange}\n                                    />\n                                    {fileRGUrl === null ? (\n                                      <div>\n                                        {\" \"}\n                                        <p style={{ color: \"red\" }}>\n                                          Preencha esse campo\n                                        </p>\n                                      </div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                {fileRGUrl !== null ? (\n                                  <CCol xs=\"4\">\n                                    <CFormGroup>\n                                      {/* <CLabel htmlFor=\"file-input\">\n                                      Visualizar RG\n                                    </CLabel> */}\n                                      <CButton\n                                        color=\"success\"\n                                        style={{ width: 200, marginTop: 10 }}\n                                        onClick={() => {\n                                          window.open(fileRGUrl, \"_blank\");\n                                        }}\n                                      >\n                                        {\" \"}\n                                        Visualizar RG Militar\n                                      </CButton>\n                                    </CFormGroup>\n                                  </CCol>\n                                ) : null}\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-2\">\n                                <CCol className=\"mb-6 mb-xl-0 text-center\">\n                                  {/* <CLabel htmlFor=\"text\"></CLabel> */}\n                                  {/* <CFormGroup> */}\n                                  <CButton\n                                    type=\"submit\"\n                                    style={{ marginTop: 20, width: 200 }}\n                                    color=\"primary\"\n                                  >\n                                    Salvar formul√°rio\n                                  </CButton>\n                                  {/* </CFormGroup> */}\n                                </CCol>\n                              </CFormGroup>\n                            </CCardBody>\n                          </CCard>\n                        </CCol>\n                      </CCardBody>\n                      {/* </CCollapse> */}\n                    </CCard>\n                    {/* <CCard className=\"mb-0\">\n                <CCardHeader id=\"headingTwo\">\n                  <CButton \n                    block \n                    color=\"link\" \n                    className=\"text-left m-0 p-0\" \n                    onClick={() => setAccordion(accordion === 1 ? null : 1)}\n                  >\n                    <h5 style={{textAlign: 'center'}} className=\"m-0 p-0\">Formul√°rio de desligamento</h5>\n                  </CButton>\n                </CCardHeader>\n                <CCollapse show={accordion === 0}>\n                  <CCardBody>\n                    2. Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non\n                    cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird\n                    on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred\n                    nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft\n                    beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven''t heard of them accusamus labore sustainable VHS.\n                  </CCardBody>\n                </CCollapse>\n              </CCard> */}\n                    {/* <CCard className=\"mb-0\">\n                <CCardHeader id=\"headingThree\">\n                  <CButton \n                    block \n                    color=\"link\" \n                    className=\"text-left m-0 p-0\" \n                    onClick={() => setAccordion(accordion === 2 ? null : 2)}\n                  >\n                    <h5 style={{textAlign: 'center'}} className=\"m-0 p-0\">Formul√°rio de reinclus√£o</h5>\n                  </CButton>\n                </CCardHeader>\n                <CCollapse show={accordion === 2}>\n                  <CCardBody>\n                    3. Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non\n                    cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird\n                    on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred\n                    nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft\n                    beer farm-to-table, raw denim aesthetic synth nesciunt you probably havent heard of them accusamus labore sustainable VHS.\n                  </CCardBody>\n                </CCollapse>\n              </CCard> */}\n                  </form>\n                </div>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      ) : (\n        <div>\n          <Carousels />\n        </div>\n      )}\n    </div>\n  );\n}"],"sourceRoot":""}