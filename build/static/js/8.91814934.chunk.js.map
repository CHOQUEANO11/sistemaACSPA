{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","services/firebase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/base/collapses/FormEdit/index.js","views/base/collapses/Collapses.js"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","_toConsumableArray","arrayLikeToArray","iter","validate","values","errors","nome","style","color","email","rg","cpf","data","naturalidade","endere√ßo","bairro","municipio","cep","tel","cel","pai","mae","grad","orgao","situacao","matricula","inclusao","atuacao","sede","FormEdit","useState","show","setShow","infoPerson","rgMilitar","fileRGUrl","setFileRGUrl","contracheque","fileCCUrl","setFileCCUrl","namedep","setNameDep","cpfDep","setCpfDep","dependentes","dependentList","setDependentList","info1","setInfo1","e","a","file","target","files","storageRef","storage","ref","fileRef","child","put","getDownloadURL","formik","useFormik","initialValues","status","onSubmit","firestore","collection","doc","id","set","dependente","toast","success","resetForm","setTimeout","xl","fontSize","textAlign","handleSubmit","className","xs","sm","htmlFor","type","placeholder","onChange","handleChange","row","autoComplete","inputMode","md","custom","width","marginTop","marginLeft","onClick","map","item","ts","removeCustom","window","open","Collapses","dataList","setDataList","setInfoPerson","showForm","setShowForm","get","querySnapshot","forEach","user","dados","filter","useEffect","teste","padding","items","fields","label","_style","sorter","columnFilter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","show_details","index","variant","shape","size","form"],"mappings":"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","file":"static/js/8.91814934.chunk.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import firebase from \"firebase\";\nimport \"firebase/storage\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA2izCgMGp6HPJBBQOExAwS8tqOqoROodM\",\n  authDomain: \"acspmbm-2a56d.firebaseapp.com\",\n  projectId: \"acspmbm-2a56d\",\n  storageBucket: \"acspmbm-2a56d.appspot.com\",\n  messagingSenderId: \"239970468989\",\n  appId: \"1:239970468989:web:ae6452602cb799014f9d14\",\n};\n// Initialize Firebase\nexport default firebase.initializeApp(firebaseConfig);\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CInput,\n  CInputFile,\n  CLabel,\n  CRow,\n  CSelect\n  // CDataTable,\n} from \"@coreui/react\";\nimport { useFormik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport firebase from \"../../../../services/firebase\";\n// import Carousels from \"../../carousels/Carousels\";\nimport Collapses from \"../Collapses\";\nconst validate = (values) => {\n  const errors = {};\n  if (!values.nome) {\n    errors.nome = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n\n  if (!values.email) {\n    errors.email = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Insira um Email V√°lido\";\n  }\n  if (!values.rg) {\n    errors.rg = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  } else if (values.rg.length > 20) {\n    errors.rg = \"Must be 20 characters or less\";\n  }\n  if (!values.cpf) {\n    errors.cpf = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  } else if (values.cpf.length > 20) {\n    errors.cpf = \"Must be 20 characters or less\";\n  }\n  if (!values.data) {\n    errors.data = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.naturalidade) {\n    errors.naturalidade = (\n      <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>\n    );\n  }\n  if (!values.endere√ßo) {\n    errors.endere√ßo = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.bairro) {\n    errors.bairro = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.municipio) {\n    errors.municipio = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.cep) {\n    errors.cep = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.tel) {\n    errors.tel = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.cel) {\n    errors.cel = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.pai) {\n    errors.pai = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.mae) {\n    errors.mae = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.grad) {\n    errors.grad = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.orgao) {\n    errors.orgao = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.situacao) {\n    errors.situacao = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.matricula) {\n    errors.matricula = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.inclusao) {\n    errors.inclusao = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.atuacao) {\n    errors.atuacao = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n  if (!values.sede) {\n    errors.sede = <p style={{ color: \"red\" }}>Esse Campo √© Obrig√°torio</p>;\n  }\n\n  return errors;\n};\nfunction FormEdit({ info }) {\n  const [show, setShow] = useState(false);\n  const [infoPerson] = useState(info);\n  const [fileRGUrl, setFileRGUrl] = useState(info.rgMilitar);\n  const [fileCCUrl, setFileCCUrl] = useState(info.contracheque);\n  const [namedep, setNameDep] = useState(null);\n  const [cpfDep, setCpfDep] = useState(null);\n  const [dependentList, setDependentList] = useState(info.dependentes);\n  const [info1, setInfo1] = useState(\"\");\n\n  function removeCustom() {\n    let ts = dependentList;\n    // let ta = ts.splice(ts.indexOf(info1.nome), 1);\n    if (info1 !== \"\") {\n      setDependentList(ts);\n    } else {\n      setTimeout(() => {\n        setDependentList(ts);\n      }, 1000);\n    }\n  }\n  async function onFileChange(e) {\n    const file = e.target.files[0];\n    const storageRef = firebase.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    await fileRef.put(file);\n    setFileRGUrl(await fileRef.getDownloadURL());\n  }\n  async function onFileChange1(e) {\n    const file = e.target.files[0];\n    const storageRef = firebase.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    await fileRef.put(file);\n    setFileCCUrl(await fileRef.getDownloadURL());\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      nome: infoPerson.nome,\n      email: infoPerson.email,\n      rg: infoPerson.rg,\n      cpf: infoPerson.cpf,\n      data: infoPerson.data,\n      naturalidade: infoPerson.naturalidade,\n      endere√ßo: infoPerson.endere√ßo,\n      bairro: infoPerson.bairro,\n      municipio: infoPerson.municipio,\n      cep: infoPerson.cep,\n      tel: infoPerson.tel,\n      cel: infoPerson.cel,\n      pai: infoPerson.pai,\n      mae: infoPerson.mae,\n      grad: infoPerson.grad,\n      orgao: infoPerson.orgao,\n      situacao: infoPerson.situacao,\n      matricula: infoPerson.matricula,\n      inclusao: infoPerson.inclusao,\n      atuacao: infoPerson.atuacao,\n      sede: infoPerson.sede,\n\n      status: \"ATIVO\",\n    },\n    validate,\n    onSubmit: (values) => {\n      try {\n        firebase.firestore().collection(\"users\").doc(infoPerson.id).set({\n          nome: values.nome,\n          email: values.email,\n          rg: values.rg,\n          cpf: values.cpf,\n          data: values.data,\n          naturalidade: values.naturalidade,\n          endere√ßo: values.endere√ßo,\n          bairro: values.bairro,\n          municipio: values.municipio,\n          cep: values.cep,\n          tel: values.tel,\n          cel: values.cel,\n          pai: values.pai,\n          mae: values.mae,\n          grad: values.grad,\n          orgao: values.orgao,\n          situacao: values.situacao,\n          matricula: values.matricula,\n          inclusao: values.inclusao,\n          atuacao: values.atuacao,\n          sede: values.sede,\n          dependente: dependentList,\n          contracheque: fileCCUrl,\n          rgMilitar: fileRGUrl,\n          status: \"ATIVO\",\n        });\n        toast.success(\"Militar reincluido com sucesso\");\n        formik.resetForm();\n        setTimeout(() => {\n          setShow(true);\n        }, 1000);\n      } catch {\n        toast.error(\n          \"Ocorreu um erro, verifique sua internet e tente novamente\"\n        );\n      }\n      // setShow(true);\n    },\n  });\n  return (\n    <div>\n      {show === false ? (\n        <CRow>\n          <CCol xl=\"12\">\n            <CCard>\n              <CCardHeader style={{ fontSize: 20, textAlign: \"center\" }}>\n                Formul√°rio de Reinclus√£o\n              </CCardHeader>\n              <CCardBody>\n                <div id=\"accordion\">\n                  <form onSubmit={formik.handleSubmit}>\n                    <CCard className=\"mb-0\">\n                      <CCardBody>\n                        <CCol xs=\"12\" sm=\"12\">\n                          <CCard>\n                            <CCardBody>\n                              <CFormGroup>\n                                <CLabel htmlFor=\"name\">NOME</CLabel>\n                                <CInput\n                                  id=\"nome\"\n                                  name=\"nome\"\n                                  type=\"text\"\n                                  placeholder=\"Digite o nome completo\"\n                                  onChange={formik.handleChange}\n                                  value={formik.values.nome}\n                                />\n                                {formik.errors.nome ? (\n                                  <div>{formik.errors.nome}</div>\n                                ) : null}\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"8\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"vat\">EMAIL</CLabel>\n                                    <CInput\n                                      type=\"email\"\n                                      id=\"email\"\n                                      name=\"email\"\n                                      placeholder=\"Digite o Email\"\n                                      autoComplete=\"email\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.email}\n                                    />\n                                    {formik.errors.email ? (\n                                      <div>{formik.errors.email}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"vat\">RG</CLabel>\n                                    <CInput\n                                      type=\"number\"\n                                      id=\"rg\"\n                                      name=\"rg\"\n                                      placeholder=\"Digite o RG\"\n                                      inputMode=\"number\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.rg}\n                                    />\n                                    {formik.errors.rg ? (\n                                      <div>{formik.errors.rg}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"cpf\">CPF</CLabel>\n                                    <CInput\n                                      type=\"number\"\n                                      id=\"cpf\"\n                                      name=\"cpf\"\n                                      placeholder=\"Digite o cpf\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.cpf}\n                                    />\n                                    {formik.errors.cpf ? (\n                                      <div>{formik.errors.cpf}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"vat\">\n                                      DATA DE NASCIMENTO\n                                    </CLabel>\n                                    <CInput\n                                      type=\"date\"\n                                      id=\"data\"\n                                      name=\"data\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.data}\n                                      placeholder=\"Digite a data de nascimento\"\n                                    />\n                                    {formik.errors.data ? (\n                                      <div>{formik.errors.data}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"vat\">NATURALIDADE</CLabel>\n                                    <CInput\n                                      type=\"text\"\n                                      name=\"naturalidade\"\n                                      id=\"naturalidade\"\n                                      placeholder=\"Digite a naturalidade\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.naturalidade}\n                                    />\n                                    {formik.errors.naturalidade ? (\n                                      <div>{formik.errors.naturalidade}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"6\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"street\">ENDERE√áO</CLabel>\n                                    <CInput\n                                      id=\"endere√ßo\"\n                                      type=\"text\"\n                                      name=\"endere√ßo\"\n                                      placeholder=\"Digite o endere√ßo\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.endere√ßo}\n                                    />\n                                    {formik.errors.endere√ßo ? (\n                                      <div>{formik.errors.endere√ßo}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"6\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"street\">BAIRRO</CLabel>\n                                    <CInput\n                                      id=\"bairro\"\n                                      type=\"text\"\n                                      name=\"bairro\"\n                                      placeholder=\"Digite o bairro\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.bairro}\n                                    />\n                                    {formik.errors.bairro ? (\n                                      <div>{formik.errors.bairro}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"city\">MUNIC√çPIO</CLabel>\n                                    <CInput\n                                      id=\"municipio\"\n                                      type=\"text\"\n                                      name=\"municipio\"\n                                      placeholder=\"Digite o munic√≠pio\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.municipio}\n                                    />\n                                    {formik.errors.municipio ? (\n                                      <div>{formik.errors.municipio}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"postal-code\">CEP</CLabel>\n                                    <CInput\n                                      id=\"cep\"\n                                      type=\"number\"\n                                      name=\"cep\"\n                                      placeholder=\"Digite o cep\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.cep}\n                                    />\n                                    {formik.errors.cep ? (\n                                      <div>{formik.errors.cep}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"postal-code\">\n                                      TELEFONE FIXO\n                                    </CLabel>\n                                    <CInput\n                                      id=\"tel\"\n                                      type=\"number\"\n                                      name=\"tel\"\n                                      placeholder=\"Digite o telefone fixo\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.tel}\n                                    />\n                                    {formik.errors.tel ? (\n                                      <div>{formik.errors.tel}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"postal-code\">\n                                      TELEFONE CELULAR (ZAP)\n                                    </CLabel>\n                                    <CInput\n                                      id=\"cel\"\n                                      type=\"number\"\n                                      name=\"cel\"\n                                      placeholder=\"Digite o celular\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.cel}\n                                    />\n                                    {formik.errors.cel ? (\n                                      <div>{formik.errors.cel}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"6\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">NOME DO PAI</CLabel>\n                                    <CInput\n                                      id=\"pai\"\n                                      type=\"text\"\n                                      name=\"pai\"\n                                      placeholder=\"Digite o nome do pai\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.pai}\n                                    />\n                                    {formik.errors.pai ? (\n                                      <div>{formik.errors.pai}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"6\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">NOME DO M√ÉE</CLabel>\n                                    <CInput\n                                      id=\"mae\"\n                                      type=\"text\"\n                                      name=\"mae\"\n                                      placeholder=\"Digite o nome da m√£e\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.mae}\n                                    />{\" \"}\n                                    {formik.errors.mae ? (\n                                      <div>{formik.errors.mae}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"3\" md=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">POST/GRAD</CLabel>\n                                    <CSelect\n                                      custom\n                                      name=\"grad\"\n                                      id=\"grad\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.grad}\n                                    >\n                                      <option value=\"0\">Selecionar</option>\n                                      <option value=\"CORONEL\">CORONEL</option>\n                                      <option value=\"TENENTE COTONEL\">\n                                        TENENTE COTONEL\n                                      </option>\n                                      <option value=\"MAJOR\">MAJOR</option>\n                                      <option value=\"CAPIT√ÉO\">CAPIT√ÉO</option>\n                                      <option value=\"1¬∫ TENENTE\">\n                                        1¬∫ TENENTE\n                                      </option>\n                                      <option value=\"2¬∫ TENENTE\">\n                                        2¬∫ TENENTE\n                                      </option>\n                                      <option value=\"ASPIRANTE A OFICIAL\">\n                                        ASPIRANTE A OFICIAL\n                                      </option>\n                                      <option value=\"ALUNO OFICIAL\">\n                                        ALUNO OFICIAL\n                                      </option>\n                                      <option value=\"SUB TENENTE\">\n                                        SUB TENENTE\n                                      </option>\n                                      <option value=\"1¬∫ SARGENTO\">\n                                        1¬∫ SARGENTO\n                                      </option>\n                                      <option value=\"2¬∫ SARGENTO\">\n                                        2¬∫ SARGENTO\n                                      </option>\n                                      <option value=\"3¬∫ SARGENTO\">\n                                        3¬∫ SARGENTO\n                                      </option>\n                                      <option value=\"CABO\">CABO</option>\n                                      <option value=\"SOLDADO\">SOLDADO</option>\n                                      <option value=\"ALUNO SOLDADO\">\n                                        ALUNO SOLDADO\n                                      </option>\n                                    </CSelect>\n                                    {formik.errors.grad ? (\n                                      <div>{formik.errors.grad}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\" md=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">ORG√ÉO</CLabel>\n                                    <CSelect\n                                      custom\n                                      name=\"orgao\"\n                                      id=\"orgao\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.orgao}\n                                    >\n                                      <option value=\"0\">Selecionar</option>\n                                      <option value=\"POL√çCIA MILITAR\">\n                                        POL√çCIA MILITAR\n                                      </option>\n                                      <option value=\"CORPO DE BOMBEIROS\">\n                                        CORPO DE BOMBEIROS\n                                      </option>\n                                    </CSelect>\n                                    {formik.errors.orgao ? (\n                                      <div>{formik.errors.orgao}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\" md=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">\n                                      SITUA√á√ÉO FUNCIONAL\n                                    </CLabel>\n                                    <CSelect\n                                      custom\n                                      name=\"situacao\"\n                                      id=\"situacao\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.situacao}\n                                    >\n                                      <option value=\"0\">Selecionar</option>\n                                      <option value=\"ATIVA\">ATIVA</option>\n                                      <option value=\"RESERVA REMUNERADA\">\n                                        RESERVA REMUNERADA\n                                      </option>\n                                    </CSelect>\n                                    {formik.errors.situacao ? (\n                                      <div>{formik.errors.situacao}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"3\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"text\">\n                                      MATRICULA FUNCIONAL\n                                    </CLabel>\n                                    <CInput\n                                      name=\"matricula\"\n                                      id=\"matricula\"\n                                      type=\"number\"\n                                      inputMode=\"number\"\n                                      placeholder=\"Digite a matricula\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.matricula}\n                                    />\n                                    {formik.errors.matricula ? (\n                                      <div>{formik.errors.matricula}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-0\">\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"date\">\n                                      DATA DA INCLUS√ÉO\n                                    </CLabel>\n                                    <CInput\n                                      id=\"inclusao\"\n                                      name=\"inclusao\"\n                                      type=\"date\"\n                                      placeholder=\"digite a data\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.inclusao}\n                                    />\n                                    {formik.errors.inclusao ? (\n                                      <div>{formik.errors.inclusao}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"date\">\n                                      LOCAL ATUAL DE ATUA√á√ÉO\n                                    </CLabel>\n                                    <CInput\n                                      id=\"atuacao\"\n                                      name=\"atuacao\"\n                                      type=\"text\"\n                                      placeholder=\"digite o local\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.atuacao}\n                                    />{\" \"}\n                                    {formik.errors.atuacao ? (\n                                      <div>{formik.errors.atuacao}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"name\">SEDE</CLabel>\n                                    <CSelect\n                                      custom\n                                      name=\"sede\"\n                                      id=\"sede\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.sede}\n                                    >\n                                      <option value=\"0\">Selecionar</option>\n                                      <option value=\"BEL√âM\">BEL√âM</option>\n                                      <option value=\"TUCURU√ç\">TUCURU√ç</option>\n                                    </CSelect>\n                                    {formik.errors.sede ? (\n                                      <div>{formik.errors.sede}</div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"date\">\n                                      {\" \"}\n                                      NOME DO DEPENDENTE\n                                    </CLabel>\n                                    <CInput\n                                      id=\"nomedep\"\n                                      name=\"nomedep\"\n                                      type=\"text\"\n                                      placeholder=\"digite o nome do dependente\"\n                                      onChange={(e) =>\n                                        setNameDep(e.target.value)\n                                      }\n                                      value={namedep}\n                                    />{\" \"}\n                                  </CFormGroup>\n                                </CCol>{\" \"}\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"date\">\n                                      {\" \"}\n                                      CPF DO DEPENDENTE\n                                    </CLabel>\n                                    <CInput\n                                      id=\"nomedep\"\n                                      name=\"nomedep\"\n                                      type=\"number\"\n                                      inputMode=\"numeric\"\n                                      placeholder=\"digite o CPF do dependente\"\n                                      onChange={(e) =>\n                                        setCpfDep(e.target.value)\n                                      }\n                                      value={cpfDep}\n                                    />{\" \"}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CButton\n                                    color=\"success\"\n                                    style={{\n                                      width: 100,\n                                      marginTop: 10,\n                                      marginLeft: 10,\n                                    }}\n                                    onClick={() => {\n                                      setDependentList([\n                                        ...dependentList,\n                                        {\n                                          nome: namedep,\n                                          cpf: cpfDep,\n                                        },\n                                      ]);\n                                    }}\n                                  >\n                                    {\" \"}\n                                    Adicionar\n                                  </CButton>{\" \"}\n                                </CCol>\n                                {dependentList.length !== 0 ? (\n                                  <CCol>\n                                    <CLabel htmlFor=\"date\"> DEPENDENTES</CLabel>\n                                    {dependentList.map((item) => {\n                                      const info = item;\n                                      return (\n                                        <>\n                                          <CFormGroup>\n                                            <p>\n                                              NOME: {item.nome} CPF: {item.cpf}{\" \"}\n                                            </p>\n                                          </CFormGroup>\n                                          <CFormGroup>\n                                            <CButton\n                                              color=\"danger\"\n                                              style={{ width: 100 }}\n                                              onClick={() => {\n                                                setInfo1(info);\n                                                removeCustom();\n                                              }}\n                                            >\n                                              {\" \"}\n                                              Remover\n                                            </CButton>\n                                          </CFormGroup>\n                                        </>\n                                      );\n                                    })}\n                                  </CCol>\n                                ) : (\n                                  <CCol xs=\"4\"></CCol>\n                                )}{\" \"}\n                                <CCol xs=\"4\"></CCol> <CCol xs=\"4\"></CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"file-input\">\n                                      CONTRACHEQUE\n                                    </CLabel>\n                                    <CInputFile\n                                      id=\"contracheque\"\n                                      name=\"contracheque\"\n                                      onChange={onFileChange1}\n                                    />\n                                    {fileCCUrl === null ? (\n                                      <div>\n                                        {\" \"}\n                                        <p style={{ color: \"red\" }}>\n                                          Preencha esse campo\n                                        </p>\n                                      </div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    {/* <CLabel htmlFor=\"file-input\">\n                                      Visualizar Contracheque\n                                    </CLabel> */}\n                                    <CButton\n                                      color=\"success\"\n                                      style={{ width: 200, marginTop: 10 }}\n                                      onClick={() => {\n                                        window.open(fileCCUrl, \"_blank\");\n                                      }}\n                                    >\n                                      {\" \"}\n                                      Visualizar Contracheque\n                                    </CButton>\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\"></CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    <CLabel htmlFor=\"file-input\">\n                                      RG MILITAR\n                                    </CLabel>\n                                    <CInputFile\n                                      id=\"rgMilitar\"\n                                      name=\"rgMilitar\"\n                                      onChange={onFileChange}\n                                    />\n                                    {fileRGUrl === null ? (\n                                      <div>\n                                        {\" \"}\n                                        <p style={{ color: \"red\" }}>\n                                          Preencha esse campo\n                                        </p>\n                                      </div>\n                                    ) : null}\n                                  </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"4\">\n                                  <CFormGroup>\n                                    {/* <CLabel htmlFor=\"file-input\">\n                                      Visualizar RG\n                                    </CLabel> */}\n                                    <CButton\n                                      color=\"success\"\n                                      style={{ width: 200, marginTop: 10 }}\n                                      onClick={() => {\n                                        window.open(fileRGUrl, \"_blank\");\n                                      }}\n                                    >\n                                      {\" \"}\n                                      Visualizar RG Militar\n                                    </CButton>\n                                  </CFormGroup>\n                                </CCol>\n                              </CFormGroup>\n                              <CFormGroup row className=\"my-2\">\n                                <CCol className=\"mb-6 mb-xl-0 text-center\">\n                                  <CButton\n                                    type=\"submit\"\n                                    style={{ marginTop: 20, width: 200 }}\n                                    color=\"primary\"\n                                  >\n                                    Reincluir a Associa√ß√£o\n                                  </CButton>\n                                </CCol>{\" \"}\n                              </CFormGroup>\n                            </CCardBody>\n                          </CCard>\n                        </CCol>\n                      </CCardBody>\n                    </CCard>\n                  </form>\n                </div>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      ) : (\n        <div>\n          <Collapses />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FormEdit;\n","import { CButton, CCard, CCardHeader, CCol, CDataTable } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport firebase from \"../../../services/firebase\";\nimport FormEdit from \"./FormEdit\";\n\nexport default function Collapses() {\n  // const [show, setShow] = useState(false);\n  const [dataList, setDataList] = useState([]);\n  const [infoPerson, setInfoPerson] = useState({});\n  const [showForm, setShowForm] = useState(false);\n  async function teste() {\n    const ts = [];\n    await firebase\n      .firestore()\n      .collection(\"users\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          const user = {\n            id: doc.id,\n            dados: doc.data(),\n          };\n\n          ts.push(user);\n        });\n      });\n\n    const ref = ts.map((item) => ({\n      id: item.id,\n      nome: item.dados.nome,\n      email: item.dados.email,\n      rg: item.dados.rg,\n      cpf: item.dados.cpf,\n      data: item.dados.data,\n      naturalidade: item.dados.naturalidade,\n      endere√ßo: item.dados.endere√ßo,\n      bairro: item.dados.bairro,\n      municipio: item.dados.municipio,\n      cep: item.dados.cep,\n      tel: item.dados.tel,\n      cel: item.dados.cel,\n      pai: item.dados.pai,\n      mae: item.dados.mae,\n      grad: item.dados.grad,\n      orgao: item.dados.orgao,\n      situacao: item.dados.situacao,\n      matricula: item.dados.matricula,\n      inclusao: item.dados.inclusao,\n      atuacao: item.dados.atuacao,\n      contracheque: item.dados.contracheque,\n      rgMilitar: item.dados.rgMilitar,\n      status: item.dados.status,\n      sede: item.dados.sede,\n      dependentes: item.dados.dependente,\n    }));\n    setDataList(ref.filter((item) => item.status === \"INATIVO\"));\n  }\n\n  useEffect(() => {\n    teste();\n  }, []);\n  const fields = [\n    { key: \"nome\", label: \"NOME\", _style: { width: \"40%\" } },\n    { key: \"cpf\", label: \"CPF\", _style: { width: \"40%\" } },\n\n    { key: \"grad\", label: \"GRADUA√á√ÉO\", _style: { width: \"20%\" } },\n    {\n      key: \"status\",\n      label: \"STATUS\",\n      _style: { width: \"20%\" },\n      sorter: false,\n      filter: false,\n    },\n    {\n      key: \"show_details\",\n      label: \"A√ß√£o\",\n      _style: { width: \"1%\" },\n      sorter: false,\n      filter: false,\n    },\n  ];\n  async function form() {\n    setShowForm(!showForm);\n  }\n\n  return (\n    <div>\n      {showForm === false ? (\n        <CCol xl=\"12\">\n          <CCard style={{ padding: 10 }}>\n            <CCardHeader style={{ fontSize: 20, textAlign: \"center\" }}>\n              Lista de Associados Inativos\n            </CCardHeader>\n            <CDataTable\n              items={dataList}\n              fields={fields}\n              columnFilter\n              tableFilter\n              footer\n              itemsPerPageSelect\n              itemsPerPage={5}\n              hover\n              sorter\n              pagination\n              scopedSlots={{\n                show_details: (item, index) => {\n                  return (\n                    <td className=\"py-2\">\n                      <CButton\n                        color=\"primary\"\n                        variant=\"outline\"\n                        shape=\"square\"\n                        size=\"sm\"\n                        onClick={() => {\n                          setInfoPerson(item);\n                          form();\n                        }}\n                      >\n                        Reinclus√£o\n                      </CButton>\n                    </td>\n                  );\n                },\n              }}\n            />{\" \"}\n          </CCard>\n        </CCol>\n      ) : (\n        <FormEdit info={infoPerson} />\n      )}\n    </div>\n  );\n}\n"],"sourceRoot":""}